@page "/"
@using Reply_o_ke.Client.Services
@inject ApiService ApiService
@inject SignalRService SignalRService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<link href="/css/home.css" rel="stylesheet" />

<PageTitle>Reply-O-Ke - Karaoke Digital</PageTitle>

<div class="container-fluid min-vh-100 d-flex flex-column justify-content-center align-items-center bg-gradient">
    <div class="text-center mb-5">
        <h1 class="display-3 fw-bold text-primary mb-3">🎤 Reply-Ô-Ke</h1>
        <p class="lead text-muted">Seu karaoke digital com fila inteligente</p>
    </div>

    <div class="card shadow-lg" style="max-width: 500px; width: 100%;">
        <div class="card-body p-5">
            @if (isLoading)
            {
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Criando sessão...</span>
                    </div>
                    <p class="mt-3">Criando sua sessão de karaoke...</p>
                </div>
            }
            else if (!string.IsNullOrEmpty(sessionId))
            {
                <div class="text-center">
                    <h3 class="mb-4">Sessão Criada! 🎉</h3>

                    <div class="mb-4">
                        <img src="data:image/png;base64,@qrCode" alt="QR Code" class="img-fluid border rounded" style="max-width: 200px;" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-bold">Link da Sessão:</label>
                        <div class="input-group">
                            <input type="text" class="form-control" value="@joinUrl" readonly />
                            <button class="btn btn-outline-secondary" type="button" @onclick="CopyToClipboard">
                                📋 Copiar
                            </button>
                        </div>
                    </div>

                    <div class="d-grid gap-2">
                        <button class="btn btn-primary btn-lg" @onclick="GoToHost">
                            🎵 Começar Karaoke
                        </button>
                        <button class="btn btn-secondary" @onclick="CreateNewSession">
                            🔄 Nova Sessão
                        </button>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center">
                    <h3 class="mb-4">Iniciar Nova Sessão</h3>
                    <p class="text-muted mb-4">Crie uma sessão de karaoke e compartilhe com seus amigos!</p>

                    <div class="d-grid">
                        <button class="btn btn-primary btn-lg" @onclick="CreateSession">
                            🚀 Criar Sessão de Karaoke
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private bool isLoading = false;
    private string sessionId = string.Empty;
    private string joinUrl = string.Empty;
    private string qrCode = string.Empty;

    private async Task CreateSession()
    {
        isLoading = true;
        StateHasChanged();

        try
        {
            var response = await ApiService.CreateSessionAsync();
            if (response != null)
            {
                sessionId = response.SessionId;
                joinUrl = response.JoinUrl;
                qrCode = response.QRCode;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao criar sessão: {ex.Message}");
            // TODO: Adicionar notificação de erro
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void CreateNewSession()
    {
        sessionId = string.Empty;
        joinUrl = string.Empty;
        qrCode = string.Empty;
        StateHasChanged();
    }
    
    private async Task CopyToClipboard()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", joinUrl);
        }
        catch
        {
            // Fallback - usuário precisa copiar manualmente
        }
    }

    private void GoToHost()
    {
        Navigation.NavigateTo($"/host/{sessionId}");
    }
}
